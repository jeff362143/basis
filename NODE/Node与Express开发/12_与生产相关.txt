Express 支持执行环境的概念，它是一种在生产、开发或测试模式中运行应用程序的方法。

如果在生产模式下启动 Express，你可能会注意到有些组件不适合在生产模 式下使用的警告信息。
如果你一直在按照本书的例子做，会看到 connect. session 用了内存存储，这不适合生产环境。

执行环境大体是一个可以利用的工具，你可以轻松地决定应用程序在不同的环境下应该做 何表现。
给你一个忠告，尽量缩小开发、测试和生产环境之间的差异。也就是说你应该保 守地使用这个功能

Node 本身支持应用集群，它是一种简单的、单服务器形式的向外扩展。使用应用集群，你 可以为系统上的每个内核(CPU)创建一个独立的服务器(有更多的服务器而不是内核数 不会提高程序的性能)。
应用集群好在两个地方:第一，它有助于实现给定服务器性能的 最大化(硬件或虚拟机);第二，它是一种在并行条件下测试程序的低开销方式。

用集群向外扩展可以实现单台服务器的性能最大化，但当你需要多台服务器时会怎样?这 时情况会变得有点复杂。
要实现这种并行，你需要一台代理服务器(为了跟一般用于访问 外部网络的代理区别开，经常被称为反向代理或正向代理，但我发现这种叫法既费解又没 必要，
所以我只称它为代理)。在代理领域的后起之秀是 Nginx(读作“engine X”)

网站监控是你可以采取的最重要的(也是最常被忽视的)QA 措施之一。
你的第一道防线应该是第三方正常运行监控。UptimeRobot(http://uptimerobot. com/)有 50 个免费监控，并且配置简单。
警报可以通过邮件、短信(文本消息)、Twitter 或者 iPhone 应用程序发送。
你可以监控单个页面的返回码(除 200 之外的所有返回码都 可以视为错误)，或者检查页面上有没有某个关键字。

