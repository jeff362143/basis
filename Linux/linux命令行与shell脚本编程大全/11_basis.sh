#echo $path  # shell会通过path变量来寻找命令,path变量指向的目录下存在各种可执行文件

# 命令输出赋值给变量(使用``或者$())
var1=`date`
var2=$(date +%y%m%d)
echo $var1  # 2022年 4月30日 星期六 14时37分23秒 CST
echo $var2  # 220430

# 输出重定向
# 最基本的输出重定向是将命令的输出发送到另一个文件上(该重定向是覆盖性的)
pwd > log.txt

#重定向不想覆盖原文件内容,使用 >> 来追加数据(可log日志的生成)
echo ">>" >> log.txt

# 输入重定向(wc会显示文本相关信息：行数，字节大小之类)
wc < log.txt

# 管道
# 管道可以把一个命令的输出提供给另一个命令当输入
# 没有管道的话就需要利用一个文件重定向当中转站

# z-shell中，算术表达式格式: $[]
num=$[7 * 99995]
echo $num
# b-shell使用$[]只支持整数运算(想计算浮点得在b-shell中使用bs命令进入计算器),zsh允许$[]计算浮点数(mac 默认的就是z shell)

# $?
# shell提供了一个特殊变量?来保存上个已执行命令的退出状态🐎(0代表上个命令正常执行退出)
